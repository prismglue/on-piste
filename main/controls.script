local game = require('main/game')

local DISPLAY_WIDTH = sys.get_config_number("display.width") or 960
local DISPLAY_HEIGHT = sys.get_config_number("display.height") or 960

function init(self)
	self.tick = 0
	self.y_height = (DISPLAY_HEIGHT/3)
	self.last_x_pos = (-1)
	self.last_y_pos = (-1)
end

-- function final(self)
-- end

-- function update(self, dt)
-- end

function fixed_update(self, dt)
	game.fixed_update(dt)
	label.set_text('/ui#speed', 'Speed: ' .. game.speed)
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
	if message_id == hash('drag') or message_id == hash('drag_end') then
		local pos = go.get_position()
		if self.last_y_pos ~= pos.y then
			local y_pct = pos.y / self.y_height
			--print('y: ' .. pos.y .. ' ypct: ' .. y_pct)
			game.set_control_speed(y_pct)
			self.last_y_pos = pos.y
		end
		if self.last_x_pos ~= pos.x then
			local x_pct = pos.x / DISPLAY_WIDTH
			game.set_control_direction(x_pct)
			self.last_x_pos = pos.x
		end
		-- self.tick = self.tick + dt
		-- if self.tick > 1 then
		-- 	print('x: ' .. pos.x .. ' xpct: ' .. x_pct .. ' rpct: ' .. r_pct .. ' lpct: ' .. l_pct)
		-- 	self.tick = 0
		-- end
	end
end

-- function on_input(self, action_id, action)
-- end

function on_reload(self)
	game = require('main/game')
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
